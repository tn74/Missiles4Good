// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "11/26/2018 13:34:01"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          vga_controller_typer
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module vga_controller_typer_vlg_vec_tst();
// constants                                           
// general purpose registers
reg [7:0] character_input;
reg [7:0] col_num;
reg iRST_n;
reg iVGA_CLK;
reg [7:0] row_num;
reg start_writing_character;
// wires                                               
wire [7:0] b_data;
wire finished_saving_char;
wire [7:0] g_data;
wire oBLANK_n;
wire oHS;
wire oVS;
wire [7:0] r_data;

// assign statements (if any)                          
vga_controller_typer i1 (
// port map - connection between master ports and signals/registers   
	.b_data(b_data),
	.character_input(character_input),
	.col_num(col_num),
	.finished_saving_char(finished_saving_char),
	.g_data(g_data),
	.iRST_n(iRST_n),
	.iVGA_CLK(iVGA_CLK),
	.oBLANK_n(oBLANK_n),
	.oHS(oHS),
	.oVS(oVS),
	.r_data(r_data),
	.row_num(row_num),
	.start_writing_character(start_writing_character)
);
initial 
begin 
#1000000 $finish;
end 

// iVGA_CLK
always
begin
	iVGA_CLK = 1'b0;
	iVGA_CLK = #10000 1'b1;
	#10000;
end 

// iRST_n
initial
begin
	iRST_n = 1'b0;
end 
endmodule

